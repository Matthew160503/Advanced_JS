// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.
// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:
// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)

alboms = [
  {
    title: "ART",
    artist: "alsls",
    year: 1989,
  },
  {
    title: "LIMB",
    artist: "Jackson",
    year: 2020,
  },
  {
    title: "Title review",
    artist: "wewewew",
    year: 2011,
  },
];

const musicCollection = {
  alboms: [...alboms],
  [Symbol.iterator]: function () {
    let countAlboms = 0;
    return {
      next: () => {
        if (countAlboms >= this.alboms.length) {
          return { done: true };
        } else {
          return { value: this.alboms[countAlboms++], done: false };
        }
      },
    };
  },
};

for (const albom of musicCollection) {
  console.log(`${albom.title} - ${albom.artist} (${albom.year})`);
}

// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.
// Необходимо создать систему управления этими заказами, которая позволит:
// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.
// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.
// Повара и их специализации:
// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.
// Блюда и их повара:
// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.
// Заказы:
// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

const cook = new Map();
cook.set("Маргарита", "Виктор");
cook.set("Пепперони", "Виктор");
cook.set("Филадельфия", "Ольга");
cook.set("Калифорния", "Ольга");
cook.set("Тирамису", "Дмитрий");
cook.set("Чизкейк", "Дмитрий");

const guest1 = {
  name: "Алексей",
};

const order1 = new Set();
order1.add("Пепперони");
order1.add("Тирамису");

const guest2 = {
  name: "Мария",
};

const order2 = new Set();
order2.add("Калифорния");
order2.add("Маргарита");

const guest3 = {
  name: "Ирина",
};

const order3 = new Set();
order3.add("Чизкейк");

const orders = new Map();
orders.set(guest1, order1);

console.log(`Клиент ${guest1.name} заказал: ${[...order1]}.`);
console.log(`Клиент ${guest2.name} заказал: ${[...order2]}.`);
console.log(`Клиент ${guest3.name} заказал: ${[...order3]}.`);
